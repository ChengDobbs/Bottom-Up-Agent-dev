project_name: 'GymAgent'
game_name: 'Crafter'
run_name: 'crafter - discrete - exploration'
close_explore: False
close_reflexion: False
close_reset: False
is_base: False
use_mcp: True
mcp:
  max_iter: 12  # More iterations for complex environment

result_path: 'results'
exec_duration: 2.0  # Longer wait time for complex decisions

teacher_type: 'Human'  # Human interaction for exploration guidance

brain:
  base_model: 'claude-3-7-sonnet-20250219'
  evaluate_model: 'gpt-4o'
  uct_c: 5.0
  uct_threshold: 0.0

# GUI Configuration (unified with crafter_interactive_launcher)
gui:
  resolution: low               # Use crafter_interactive_launcher preset: tiny/small/low/medium/high/ultra
  width: 384                    # Explicit width override (optional)
  height: 384                   # Explicit height override (optional) 
  fps: 30                       # Frames per second
  title: "Crafter"
  resizable: false
  fullscreen: false
  fps_limit: 60
  vsync: true
  
# Gym Environment Configuration
gym:
  env_type: "crafter_direct"    # Use direct Crafter.Env() creation
  env_id: "CrafterReward-v1"    # Identifier for logging
  render_mode: "rgb_array"       # Use rgb_array to avoid Crafter's native window
  max_episode_steps: 10000      # Long episodes for exploration
  
  # Action and observation spaces (Crafter specific)
  action_space:
    type: "Discrete"
    n: 17  # Crafter has 17 discrete actions
    actions: ["noop", "move_left", "move_right", "move_up", "move_down", 
              "do", "sleep", "place_stone", "place_table", "place_furnace", 
              "place_plant", "make_wood_pickaxe", "make_stone_pickaxe", 
              "make_iron_pickaxe", "make_wood_sword", "make_stone_sword", "make_iron_sword"]
    
  observation_space:
    type: "Box"
    shape: [64, 64, 3]  # RGB image observations
    dtype: "uint8"
    low: 0
    high: 255
    
  # Crafter specific settings
  crafter_settings:
    area: [64, 64]      # World size
    view: [9, 9]        # View size around player
    length: 10000       # Episode length
    seed: null          # Random seed (null for random)

# Achievement tracking for Crafter
achievements:
  track_achievements: True
  achievement_list:
    - 'collect_coal'
    - 'collect_diamond'
    - 'collect_drink'
    - 'collect_iron'
    - 'collect_sapling'
    - 'collect_stone'
    - 'collect_wood'
    - 'defeat_skeleton'
    - 'defeat_zombie'
    - 'eat_cow'
    - 'eat_plant'
    - 'make_iron_pickaxe'
    - 'make_iron_sword'
    - 'make_stone_pickaxe'
    - 'make_stone_sword'
    - 'make_wood_pickaxe'
    - 'make_wood_sword'
    - 'place_furnace'
    - 'place_plant'
    - 'place_stone'
    - 'place_table'
    - 'wake_up'

# Long-term memory configuration
long_memory:
  sim_threshold: 0.80  # Lower threshold for diverse exploration

# Vector database configuration
vector_memory:
  similarity_threshold: 0.88  # Lower threshold for diverse states
  embedding_type: "open_clip"
  clip_model: "ViT-B/32"
  vector_dim: 512
  batch_size: 32
  
  image_preprocessing:
    target_size: [224, 224]
    normalize: true
    
  similarity_matching:
    high_threshold: 0.85  # Adjusted for exploration
    medium_threshold: 0.65
    low_threshold: 0.45
    
  deduplication:
    enabled: true
    spatial_threshold: 15  # Larger threshold for world exploration
    content_similarity: 0.75
    
  storage_optimization:
    compress_vectors: false
    pca_components: 256
    cache_size: 2000  # Larger cache for complex environment
    
  retrieval:
    default_top_k: 15
    max_results: 100
    enable_reranking: true

# Detector configuration
detector:
  type: 'crafter_api'  # Options: 'sam', 'omni', 'template', 'crafter_api'
  clip_model: 'ViT-B/32'
  
  omni:
    som_model_path: './weights/icon_detect/model.pt'
    caption_model_name: 'florence2'
    caption_model_path: './weights/icon_caption_florence'
    BOX_TRESHOLD: 0.5  # Lower threshold for diverse objects
    iou_threshold: 0.3
    text_overlap_threshold: 0.2
  
  # Template matching detector for grid-based games
  template:
    assets_path: './crafter/crafter/assets'  # Path to template images
    grid_size: [9, 9]  # Grid dimensions [width, height]
    threshold: 0.8     # Template matching threshold (0.0-1.0)
    # For Crafter: 7x9 main view + 2 rows for inventory
    # Main game area: 7 rows, Inventory area: 2 rows
  
  # Crafter API detector configuration (for structured game state)
  crafter_api:
    grid_size: [7, 9]  # Grid dimensions [rows, cols] - 7x9 main view
    inventory_size: [2, 9]  # Inventory grid size (width, height)
    unit_size: 64  # Size of each grid cell in pixels
    enable_semantic_view: true  # Include all world objects in detection
    
    # Detection method selection
    detection_method: 'direct_api'  # Options: 'similarity_matching', 'direct_api', 'hybrid'
    
    # Similarity matching configuration
    similarity_matching:
      enabled: true
      template_source: 'crafter_assets'  # Use crafter asset templates
      similarity_threshold: 0.8  # Minimum similarity score (0.0-1.0)
      use_color_analysis: true   # Enable RGB color analysis as fallback
      cache_templates: true      # Cache loaded templates for performance
      
    # Direct API configuration  
    direct_api:
      enabled: true
      use_world_state: true      # Access world._world for material info
      use_player_state: true     # Access player inventory and position
      include_objects: true      # Include dynamic objects (creatures, items)
      fallback_to_similarity: true  # Use similarity matching if API fails

# Database path configuration
database:
  sqlite_path: "./data/sql/crafter.db"
  vector_db_path: "./data/vector/crafter"
  backup_enabled: true
  backup_interval: 1800  # More frequent backups

# Logging configuration
logging:
  level: "INFO"
  file: "./logs/crafter_agent.log"
  max_size: "50MB"  # Larger log files for complex environment
  backup_count: 10

# Performance configuration
performance:
  use_gpu: false
  num_workers: 6  # More workers for complex processing
  prefetch_factor: 3
  pin_memory: true

# Experimental features
experimental:
  multimodal_fusion: true   # Enable for rich visual environment
  semantic_clustering: true # Enable for object categorization
  temporal_tracking: true   # Enable for sequence learning

# Display configuration for crafter rendering
eye:
  width: 400
  height: 400

# Crafter recording configuration
recording:
  save_stats: True
  save_video: False  # Disable to save space
  save_episode: True
  logdir: './crafter_logs'